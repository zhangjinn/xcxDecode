{"remainingRequest":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/index.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/index.js","mtime":1654419828865},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/babel.config.js","mtime":1652104655775},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/cache-loader/dist/cjs.js","mtime":1654421629883},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/babel-loader/lib/index.js","mtime":1654421630639}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Parse","AREA","Utils","XLSX","mulNum","downloadXlsxFile","name","data","fileList","readData","stream","gaodeMapKey","hitCount","resolvedCount","percentage","isCanClick","watch","newData","oldData","length","rate","toFixed","resolutionEnd","methods","downloadDocumentation","a","document","createElement","href","download","target","click","remove","getGeocodeData","obj","axios","url","params","keywords","address","key","city","extensions","then","res","pois","poisItem","adname","code","adcode","province","pname","cityname","area","details","result","catch","err","console","log","handleRemove","index","splice","handleExceed","files","$message","warning","httpRequest","e","file","test","toLowerCase","error","loading","$loading","lock","text","spinner","background","fileReader","FileReader","onload","ev","workbook","read","type","exlname","SheetNames","exl","utils","sheet_to_json","Sheets","hasOwnProperty","close","push","success","readAsBinaryString","addressParseTest","list","item","setTimeout","Array","isArray","parse","results","streamItem","param","gResult","provinceCode","slice","province_list","cityCode","city_list","$forceUpdate","exportFormat","value","toString","replace","toResolution","sort","sortBy","initFields","ele","currFields","fields","Object","assign","filename","field","x","y"],"sources":["/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/index.js"],"sourcesContent":["import Parse, { AREA, Utils } from './parse/index.js'\r\nimport * as XLSX from 'xlsx/xlsx.mjs'\r\nimport { mulNum } from '@/utils/index'\r\nimport {downloadXlsxFile } from \"@/utils/toolFn\"\r\n\r\nexport default {\r\n  name: 'addressResolution',\r\n  data () {\r\n    return {\r\n      fileList: [], // 上传文件列表\r\n      readData: [], // 需解析数据列表\r\n      stream: [], // 解析完成的数据列表\r\n      gaodeMapKey: '', // 高德地图key\r\n      hitCount: 0, // 解析成功数量\r\n      resolvedCount: 0, // 已解析数量\r\n      percentage: 0, // 地址解析进度\r\n      isCanClick: true, // 页面是否可点击，地址解析是页面不允许编辑\r\n    }\r\n  },\r\n  watch: {\r\n    //监听内容\r\n    resolvedCount(newData, oldData) {\r\n      if(this.readData.length>0){\r\n        let rate = (newData/this.readData.length).toFixed(2)\r\n        this.percentage = mulNum(rate,100)\r\n\r\n        if(newData>=this.readData.length){ // 解析完成去下载\r\n          this.resolutionEnd()\r\n        }\r\n\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 下载文档\r\n    downloadDocumentation(){\r\n      let a = document.createElement(\"a\");\r\n      a.href = `/static/manual.docx`;\r\n      a.download = \"地址解析工具使用手册.docx\";\r\n      a.target = \"_blank\";\r\n      a.click();\r\n      a.remove();\r\n    },\r\n    async getGeocodeData (obj) {\r\n      try {\r\n        await this.axios({\r\n          url: 'https://restapi.amap.com/v3/place/text',\r\n          params: {\r\n            keywords: obj.address,\r\n            key: this.gaodeMapKey,\r\n            city: obj.city,\r\n            extensions: 'all',\r\n          }\r\n        }).then((res) => {\r\n          if(res && res.data && res.data.pois && res.data.pois.length){\r\n            let poisItem = res.data.pois[0]\r\n            if(poisItem.adname){\r\n              obj = {\r\n                ...obj,\r\n                code: poisItem.adcode + '000000',\r\n                province: poisItem.pname,\r\n                city: poisItem.cityname,\r\n                area: poisItem.adname,\r\n                details: poisItem.address,\r\n                result: '成功',\r\n              }\r\n            }\r\n          }\r\n        }).catch((err) => {\r\n          console.log(\"err:\", err);\r\n        });\r\n      }\r\n      catch(err) {\r\n        console.log(err)\r\n      }\r\n      return obj\r\n    },\r\n\r\n    // 删除上传文件列表\r\n    handleRemove(index){\r\n      this.fileList.splice(index, 1)\r\n      this.readData = []\r\n      this.stream = []\r\n      this.hitCount = 0\r\n      this.resolvedCount = 0\r\n      this.percentage = 0\r\n    },\r\n\r\n    // 校验上传文件个数\r\n    handleExceed (files, fileList) {\r\n      this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`)\r\n    },\r\n\r\n    // 导入excel文件并解析数据成json格式\r\n    httpRequest (e) {\r\n      const file = e.file // 文件信息\r\n      if (!file) {\r\n        return false\r\n      } else if (!/\\.(xls|xlsx)$/.test(file.name.toLowerCase())) {\r\n        // 格式根据自己需求定义\r\n        this.$message.error('上传格式不正确，请上传xls或者xlsx格式')\r\n        return false\r\n      }\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: '文件读取中...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n      const fileReader = new FileReader()\r\n      fileReader.onload = (ev) => {\r\n        try {\r\n          const data = ev.target.result\r\n          const workbook = XLSX.read(data, {\r\n            // 以字符编码的方式解析\r\n            type: 'binary'\r\n          })\r\n          // 取第一张表\r\n          const exlname = workbook.SheetNames[0]\r\n          const exl = XLSX.utils.sheet_to_json(workbook.Sheets[exlname]) // 生成json表格内容\r\n          // console.log('解析的Excel数据', exl)\r\n\r\n          if(exl && exl.length>0 && !exl[0].hasOwnProperty('地址')){\r\n            this.$message.error('解析表格中需包含《地址》标题一栏')\r\n            loading.close();\r\n            this.handleRemove(0)\r\n            return false\r\n          }\r\n\r\n          this.fileList.push(file)\r\n\r\n          this.readData = exl || []\r\n          this.$message.success('已成功读取上传文件，可进行解析')\r\n          loading.close();\r\n        } catch (e) {\r\n          console.log('error')\r\n          loading.close();\r\n          return false\r\n        }\r\n      }\r\n      fileReader.readAsBinaryString(file)\r\n    },\r\n\r\n    /**\r\n     * 地址列表解析验证\r\n     * @param list {Array} [address, [address, resultCode]]\r\n     * @returns {boolean}\r\n     */\r\n     async addressParseTest (list = []) {\r\n      let index = 0\r\n      for (const item of list) {\r\n        await setTimeout(async ()=>{\r\n          index += 1\r\n          const address = Array.isArray(item) ? item[0] : item['地址']\r\n          const [result = {}, ...results] = Parse.parse(address, true) // 取数组第一位\r\n\r\n          let streamItem = {}\r\n          if (result.area) {\r\n            this.hitCount++\r\n            streamItem = {\r\n              ...item,\r\n              index: index,\r\n              code: result.code,\r\n              province: result.province,\r\n              city: result.city,\r\n              area: result.area,\r\n              details: result.details,\r\n              address: address,\r\n              result: '成功',\r\n            }\r\n          } else {\r\n            streamItem = {\r\n              ...item,\r\n              index: index,\r\n              code: '',\r\n              province: '',\r\n              city: '',\r\n              area: '',\r\n              details: '',\r\n              address: address,\r\n              result: '失败',\r\n            }\r\n            if (this.gaodeMapKey) { // 有key值，进行高德地图二次解析\r\n              let param = streamItem\r\n              param.city = result.city\r\n              let gResult = await this.getGeocodeData(param)\r\n              if (gResult.code && gResult.result === '成功') {\r\n                this.hitCount++\r\n                streamItem = gResult\r\n              }\r\n            }\r\n          }\r\n          if (streamItem.code && streamItem.result === '成功') {\r\n            if(!streamItem.province){\r\n              let provinceCode = `${streamItem.code.slice(0, 2)}0000000000`\r\n              streamItem.province = AREA.province_list[provinceCode]\r\n            }\r\n            if(!streamItem.city){\r\n              let cityCode = `${streamItem.code.slice(0, 4)}00000000`\r\n              streamItem.city = AREA.city_list[cityCode]\r\n            }\r\n          }\r\n\r\n          this.stream.push(streamItem)\r\n          this.resolvedCount += 1\r\n        },0)\r\n        this.$forceUpdate();\r\n      }\r\n\r\n    },\r\n\r\n    // 防止数据中出现特殊字符和英文字符(会造成单元格分隔)的逗号所以这边过滤一下\r\n    exportFormat(value){\r\n      if(value){\r\n        value = value.toString()\r\n        value=value.replace(/[\\n]/, '');\r\n        value=value.replace(/,/, '，');\r\n        return value;\r\n      }\r\n      return value\r\n    },\r\n\r\n    // 解析地址并下载\r\n     toResolution () {\r\n      if (this.readData.length <= 0) {\r\n        this.$message.error('暂无要解析的地址信息')\r\n        return false\r\n      }\r\n\r\n      this.stream = []\r\n      this.hitCount = 0\r\n      this.resolvedCount = 0\r\n      this.percentage = 0\r\n      this.isCanClick = false\r\n\r\n       // 地址解析\r\n       setTimeout( ()=>{\r\n        this.addressParseTest(this.readData)\r\n       },50)\r\n\r\n    },\r\n\r\n    // 解析完成去下载\r\n    resolutionEnd(){\r\n      let result = this.stream\r\n      result.sort(this.sortBy('index'))\r\n\r\n      this.isCanClick = true\r\n      this.$message.success('解析完成')\r\n\r\n      let initFields = {}\r\n      for(let ele in result[0]){\r\n        if(ele!=='index' && ele!=='address'){\r\n          initFields[ele] = ele\r\n        }\r\n      }\r\n      let currFields={\r\n        code: '编码',\r\n        province: '省',\r\n        city: '市',\r\n        area: '区/县',\r\n        details: '详细地址',\r\n        result: '解析结果',\r\n      };\r\n\r\n      let fields = Object.assign({}, initFields, currFields);\r\n      let filename = '地址解析成功数据表'\r\n\r\n      // 解析完成地址下载\r\n      downloadXlsxFile(result,fields,filename)\r\n    },\r\n\r\n    //根据传过来的字段进行排序\r\n    sortBy (field) {\r\n      return (x, y) => {\r\n        return x[field] - y[field]\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"}]}