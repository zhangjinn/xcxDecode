{"remainingRequest":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/babel-loader/lib/index.js!/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/parse/index.js","dependencies":[{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/parse/index.js","mtime":1652104671362},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/babel.config.js","mtime":1652104655775},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/cache-loader/dist/cjs.js","mtime":1654421629883},{"path":"/Users/jin/Desktop/work-item/git-pro/AddrDecode/node_modules/babel-loader/lib/index.js","mtime":1654421630639}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AREA","Utils","ParseArea","ParseAddress","address","parse","parseAll","results","result","mobile","zip_code","phone","replace","parseMobile","parsePhone","parseZipCode","firstName","parseName","details","Object","assign","length","province","city","area","name","code","__type","push","ExcludeKeys","key","RegExp","Reg","lastIndex","exec","zipCode","zip","maxLen","list","split","value","index","v","strLen","splice","join"],"sources":["/Users/jin/Desktop/work-item/git-pro/AddrDecode/src/views/addressResolution/parse/index.js"],"sourcesContent":["/**\n * address-parse\n * MIT License\n * By www.asseek.com\n */\nimport AREA from '../area'\nimport Utils from './utils'\nimport ParseArea from './parse-area'\n\nclass ParseAddress {\n  static ExcludeKeys = ['发件人', '收货地址', '收货人', '收件人', '收货', '手机号码', '邮编', '电话', '所在地区', '详细地址', '地址', '：', ':', '；', ';', '，', ',', '。', '、'];\n\n  static ParseArea = new ParseArea();\n\n  static Reg = {\n    ...Utils.Reg\n  };\n\n  constructor (address) {\n    if (address) {\n      return this.parse(address)\n    }\n  }\n\n  /**\n   * 开始解析\n   * @param address string 地址\n   * @param parseAll boolean 是否完全解析\n   * @returns {Array}\n   */\n  parse (address, parseAll) {\n    let results = []\n    if (address) {\n      this.result = {\n        mobile: '',\n        zip_code: '',\n        phone: ''\n      }\n\n      this.address = address\n      this.replace()\n      this.parseMobile()\n      this.parsePhone()\n      this.parseZipCode()\n      this.address = this.address.replace(/ {2,}/, ' ')\n      const firstName = ParseAddress.parseName({ details: this.address })\n\n      results = ParseAddress.ParseArea.parse(this.address, parseAll)\n\n      for (const result of results) {\n        Object.assign(result, this.result)\n        ParseAddress.parseName(result, { firstName })\n      }\n      if (!results.length) {\n        const result = Object.assign(this.result, {\n          province: '',\n          city: '',\n          area: '',\n          details: this.address,\n          name: '',\n          code: '',\n          __type: ''\n        })\n        ParseAddress.parseName(result)\n        results.push(result)\n      }\n    }\n    return results\n  }\n\n  /**\n   * 替换无效字符\n   */\n  replace () {\n    let { address } = this\n    for (const key of ParseAddress.ExcludeKeys) {\n      address = address.replace(new RegExp(key, 'g'), ' ')\n    }\n    this.address = address.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ').replace(/\\t/g, ' ').replace(/ {2,}/g, ' ')\n      .replace(/(\\d{3})-(\\d{4})-(\\d{4})/g, '$1$2$3').replace(/(\\d{3}) (\\d{4}) (\\d{4})/g, '$1$2$3')\n  }\n\n  /**\n   * 提取手机号码\n   */\n  parseMobile () {\n    ParseAddress.Reg.mobile.lastIndex = 0\n    const mobile = ParseAddress.Reg.mobile.exec(this.address)\n    if (mobile) {\n      this.result.mobile = mobile[0]\n      this.address = this.address.replace(mobile[0], ' ')\n    }\n  }\n\n  /**\n   * 提取电话号码\n   */\n  parsePhone () {\n    ParseAddress.Reg.phone.lastIndex = 0\n    const phone = ParseAddress.Reg.phone.exec(this.address)\n    if (phone) {\n      this.result.phone = phone[0]\n      this.address = this.address.replace(phone[0], ' ')\n    }\n  }\n\n  /**\n   * 提取邮编\n   */\n  parseZipCode () {\n    ParseAddress.Reg.zipCode.lastIndex = 0\n    const zip = ParseAddress.Reg.zipCode.exec(this.address)\n    if (zip) {\n      this.result.zip_code = zip[0]\n      this.address = this.address.replace(zip[0], '')\n    }\n  }\n\n  /**\n   * 提取姓名\n   * @param result\n   * @param maxLen 字符串占位 比这个数值短才识别为姓名 汉字2位英文1位\n   * @param firstName 最初切分地址识别到的name\n   */\n  static parseName (result, { maxLen = 11, firstName } = {}) {\n    if (!result.name) {\n      const list = result.details.split(' ')\n      const name = {\n        value: '',\n        index: -1\n      }\n      if (list.length > 1) {\n        let index = 0\n        for (const v of list) {\n          if (v || Utils.strLen(name.value) > Utils.strLen(v) || firstName && v === firstName) {\n            name.value = v\n            name.index = index\n            if (firstName && v === firstName) break\n          }\n          index += 1\n        }\n      }\n      if (name.value) {\n        result.name = name.value\n        list.splice(name.index, 1)\n        result.details = list.join(' ')\n      }\n    }\n    return result.name\n  }\n}\n\nexport {\n  ParseAddress,\n  AREA,\n  Utils\n}\n\nexport default new ParseAddress()\n"],"mappings":"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"}]}